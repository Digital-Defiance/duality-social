version: '3'
services:
  app:
    image: mcr.microsoft.com/devcontainers/typescript-node:0-20-bullseye
    volumes:
      - ..:/workspace:cached
    command: /bin/sh -c "while sleep 1000; do :; done"
    environment:
      NODE_ENV: development
      DUALITY_DB_NAME: ${DUALITY_DB_NAME}
      DUALITY_DB_USER: ${DUALITY_DB_USER}
      DUALITY_DB_PASSWORD: ${DUALITY_DB_PASSWORD}
      KEYCLOAK_DB_NAME: ${KEYCLOAK_DB_NAME}
      KEYCLOAK_DB_USER: ${KEYCLOAK_DB_USER}
      KEYCLOAK_DB_PASSWORD: ${KEYCLOAK_DB_PASSWORD}
      KEYCLOAK_CLIENT_SECRET: ${KEYCLOAK_CLIENT_SECRET}
      KEYCLOAK_REGISTRATION_TOKEN: ${KEYCLOAK_REGISTRATION_TOKEN}
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
    depends_on:
      - postgres
      - keycloak
    networks:
      - duality

  postgres:
    image: postgres:13.2
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${KEYCLOAK_DB_NAME}
      POSTGRES_USER: ${KEYCLOAK_DB_USER}
      POSTGRES_PASSWORD: ${KEYCLOAK_DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - duality

  keycloak:
    image: quay.io/keycloak/keycloak:${KEYCLOAK_VERSION}
    depends_on:
      - postgres
    environment:
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
      KEYCLOAK_LOGLEVEL: INFO
      ROOT_LOGLEVEL: INFO
      DB_VENDOR: postgres
      KC_DB: postgres
      KC_DB_SCHEMA: public
      KC_DB_USERNAME: ${KEYCLOAK_DB_USER}
      KC_DB_PASSWORD: ${KEYCLOAK_DB_PASSWORD}
      KC_DB_URL_PORT: 5432
      KC_DB_URL_HOST: postgres
      KC_DB_URL_DATABASE: ${KEYCLOAK_DB_NAME}
      KC_HTTP_ENABLED: true
      KC_HOSTNAME_STRICT: false
      KC_HOSTNAME_STRICT_HTTPS: false
      POSTGRES_USER: ${KEYCLOAK_DB_USER}
      POSTGRES_PASSWORD: ${KEYCLOAK_DB_PASSWORD}
    ports:
      - "28080:8080"
      - "8787:8787"
    command:
      - start-dev
      - --features admin-fine-grained-authz
    restart: unless-stopped
    networks:
      - duality

volumes:
  postgres_data:

networks:
  duality: